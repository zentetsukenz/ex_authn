name: CI

on:
  pull_request:
  push:
    branches:
      - master

env:
  MIX_ENV: test
  LATEST_OTP_VERSION: '23.2.4'
  LATEST_ELIXIR_VERSION: '1.11.3'

jobs:
  test:
    name: Test on (Erlang/OTP ${{ matrix.otp }} | Elixir ${{ matrix.elixir }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        otp: ['23.2.4', '22.3.4.15', '21.3.8.20']
        elixir: ['1.11.3', '1.10.4']
    steps:
      - uses: actions/checkout@v2.3.1

      - name: Setup Elixir
        uses: erlef/setup-elixir@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - name: Cache
        uses: actions/cache@v2
        id: mix-cache
        with:
          path: deps
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Install Dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get

      - name: Compile and test
        run: mix do compile --warnings-as-errors, test

  check_formatted:
    name: Check formatted
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.1

      - name: Setup Elixir
        uses: erlef/setup-elixir@v1
        with:
          otp-version: ${{ env.LATEST_OTP_VERSION }}
          elixir-version: ${{ env.LATEST_ELIXIR_VERSION }}

      - name: Cache
        uses: actions/cache@v2
        id: mix-cache
        with:
          path: deps
          key: ${{ runner.os }}-${{ env.LATEST_OTP_VERSION }}-${{ env.LATEST_ELIXIR_VERSION }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Install Dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get

      - name: Formatted
        run: mix format --check-formatted

  check_quality:
    name: Check quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.1

      - name: Setup Elixir
        uses: erlef/setup-elixir@v1
        with:
          otp-version: ${{ env.LATEST_OTP_VERSION }}
          elixir-version: ${{ env.LATEST_ELIXIR_VERSION }}

      - name: Cache
        uses: actions/cache@v2
        id: mix-cache
        with:
          path: deps
          key: ${{ runner.os }}-${{ env.LATEST_OTP_VERSION }}-${{ env.LATEST_ELIXIR_VERSION }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Install Dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get

      - name: Credo
        run: mix credo

      - name: PLTs Cache
        uses: actions/cache@v2
        id: plt-cache
        with:
          path: priv/plts
          key: ${{ runner.os }}-${{ env.LATEST_OTP_VERSION }}-${{ env.LATEST_ELIXIR_VERSION }}-plts-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Create PLTs
        if: steps.plt-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p priv/plts
          mix dialyzer --plt

      - name: Run dialyzer
        run: mix dialyzer --no-check --format short